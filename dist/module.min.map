{"version":3,"sources":["webpack://angular-jxon/webpack/universalModuleDefinition","webpack://angular-jxon/webpack/bootstrap","webpack://angular-jxon/external \"angular\"","webpack://angular-jxon/./module.js"],"names":["a","b","exports","module","require","define","amd","angular","window","d","c","e","i","l","call","m","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","prototype","hasOwnProperty","p","s","DOMParser","console","error","sValueProp","sAttrProp","sAttrsPref","sLowCase","sEmptyTrue","sAutoDate","sIgnorePrefixed","aCache","rIsNull","rIsBool","g","test","toLowerCase","isFinite","parseFloat","Date","parse","h","j","k","length","hasChildNodes","nodeType","ELEMENT_NODE","hasAttributes","q","childNodes","item","nodeValue","trim","prefix","push","[object Object]","constructor","f","nodeName","Array","attributes","name","freeze","String","Number","Boolean","appendChild","createTextNode","toGMTString","toString","valueOf","Function","setAttribute","charAt","slice","createElementNS","namespaceURI","provider","this","config","TypeError","valueKey","attrKey","attrPrefix","lowerCaseTags","trueIsEmpty","autoDate","ignorePrefixedNodes","$get","xml","XMLSerializer","serializeToString","xmlToJs","document","implementation","createDocument","documentElement","jsToXml","parseFromString","xmlToString","jsToString","stringToXml","arguments"],"mappings":"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","file":"module.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-jxon\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"angular-jxon\"] = factory(root[\"angular\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\n* @name angular-jxon\n* @author Joseph Quinn <quinn.josephr@protonmail.com>\n* @license MIT\n* @requires angular/angular@>=1.3.0 < 2\n* @exports angular-jxon.name\n*/\n// Ensure DOMParser is available\nif(typeof(window.DOMParser) === 'undefined') {\n  console.error('DOMParser is unavailable. Please load a DOMParser shim before the angular-jxon module');\n}\n/**\n* @class EmptyTree\n*/\nclass EmptyTree {\n  /**\n  * @constructs\n  */\n  constructor() { }\n  /**\n  * @function toString\n  * @return {String} 'null'\n  */\n  toString() { return 'null'; }\n  /**\n  * @function valueOf\n  * @return null\n  */\n  valueOf() { return null; }\n}\n/**\n* @let {Object} cfg\n*/\nconst cfg =  {\n  sValueProp: 'keyValue',\n  sAttrProp: 'keyAttributes',\n  sAttrsPref: '@',\n  sLowCase: true,\n  sEmptyTrue: true,\n  sAutoDate: true,\n  sIgnorePrefixed: false,\n  aCache: [],\n  rIsNull: /^\\s*$/,\n  rIsBool: /^(?:true|false)$/i\n};\n/**\n* @constant {Function} objectify\n* @param {Mixed} vValue\n* @return {Object}\n*/\nconst objectify = function(vValue) {\n  return vValue === null ? new EmptyTree() : vValue instanceof Object ? vValue : new vValue.constructor(vValue);\n};\n/**\n* @constant {Function} parseText\n* @param {Mixed} sValue\n* @return {Mixed}\n*/\nconst parseText = function(sValue) {\n  if(cfg.rIsNull.test(sValue)) { return null; }\n  if(cfg.rIsBool.test(sValue)) { return sValue.toLowerCase() === 'true'; }\n  if(isFinite(sValue)) { return parseFloat(sValue); }\n  if(cfg.sAutoDate && isFinite(Date.parse(sValue))) { return new Date(sValue); }\n  return sValue;\n};\n/**\n* @constant {Function} createObjTree\n* @param {Object} oParentNode\n* @param {Number} nVerb\n* @param {Boolean} bFreeze\n* @param {Boolean} bNesteAttr \n* @return {Object}\n*/\nconst createObjTree = function(oParentNode, nVerb, bFreeze, bNesteAttr) {\n  let\n    nLevelStart = cfg.aCache.length, bChildren = oParentNode.hasChildNodes(),\n    bAttributes = oParentNode.nodeType === oParentNode.ELEMENT_NODE && oParentNode.hasAttributes(), bHighVerb = Boolean(nVerb & 2);\n\n  let\n    sProp, vContent, nLength = 0, sCollectedTxt = \"\",\n    vResult = bHighVerb ? {} : /* put here the default value for empty nodes: */ true;\n\n  if (bChildren) {\n    for (let oNode, nItem = 0; nItem < oParentNode.childNodes.length; nItem = nItem + 1) {\n      oNode = oParentNode.childNodes.item(nItem);\n      if (oNode.nodeType === 4) { sCollectedTxt += oNode.nodeValue; } /* nodeType is \"CDATASection\" (4) */\n      else if (oNode.nodeType === 3) { sCollectedTxt += oNode.nodeValue.trim(); } /* nodeType is \"Text\" (3) */\n      else if (oNode.nodeType === 1 && !(cfg.sIgnorePrefixed && oNode.prefix)) { cfg.aCache.push(oNode); } /* nodeType is \"Element\" (1) */\n    }\n  }\n\n  let nLevelEnd = cfg.aCache.length, vBuiltVal = parseText(sCollectedTxt);\n\n  if (!bHighVerb && (bChildren || bAttributes)) { vResult = nVerb === 0 ? objectify(vBuiltVal) : {}; }\n\n  for (let nElId = nLevelStart; nElId < nLevelEnd; nElId = nElId + 1) {\n    sProp = cfg.aCache[nElId].nodeName;\n    if (cfg.sLowCase) sProp = sProp.toLowerCase();\n    vContent = createObjTree(cfg.aCache[nElId], nVerb, bFreeze, bNesteAttr);\n    if (vResult.hasOwnProperty(sProp)) {\n      if (vResult[sProp].constructor !== Array) { vResult[sProp] = [vResult[sProp]]; }\n      vResult[sProp].push(vContent);\n    } else {\n      vResult[sProp] = vContent;\n      nLength = nLength + 1;\n    }\n  }\n\n  if (bAttributes) {\n    let\n      nAttrLen = oParentNode.attributes.length,\n      sAPrefix = bNesteAttr ? \"\" : cfg.sAttrsPref, oAttrParent = bNesteAttr ? {} : vResult;\n\n    for (let oAttrib, oAttribName, nAttrib = 0; nAttrib < nAttrLen; nLength = nLength + 1, nAttrib = nAttrib + 1) {\n      oAttrib = oParentNode.attributes.item(nAttrib);\n      oAttribName = oAttrib.name;\n      if (cfg.sLowCase) oAttribName = oAttribName.toLowerCase();\n      oAttrParent[sAPrefix + oAttribName] = parseText(oAttrib.value.trim());\n    }\n\n    if (bNesteAttr) {\n      if (bFreeze) { Object.freeze(oAttrParent); }\n      vResult[cfg.sAttrProp] = oAttrParent;\n      nLength -= nAttrLen - 1;\n    }\n  }\n\n  if (nVerb === 3 || (nVerb === 2 || nVerb === 1 && nLength > 0) && sCollectedTxt) {\n    vResult[cfg.sValueProp] = vBuiltVal;\n  } else if (!bHighVerb && nLength === 0 && sCollectedTxt) {\n    vResult = vBuiltVal;\n  }\n\n  if (bFreeze && (bHighVerb || nLength > 0)) { Object.freeze(vResult); }\n\n  cfg.aCache.length = nLevelStart;\n\n  return vResult;\n};\n/**\n* @constant {Function} loadObjTree\n* @param {Object} oXMLDoc\n* @param {Object} oParentEl\n* @param {Object} oParentObj\n*/\nconst loadObjTree = function(oXMLDoc, oParentEl, oParentObj) {\n  let vValue, oChild;\n\n  if (oParentObj.constructor === String || oParentObj.constructor === Number || oParentObj.constructor === Boolean) {\n    oParentEl.appendChild(oXMLDoc.createTextNode(oParentObj.toString())); /* verbosity level is 0 or 1 */\n    if (oParentObj === oParentObj.valueOf()) { return; }\n  } else if (oParentObj.constructor === Date) {\n    oParentEl.appendChild(oXMLDoc.createTextNode(oParentObj.toGMTString()));\n  }\n\n  for (let sName in oParentObj) {\n    if(oParentObj.hasOwnProperty(sName)) {\n\n      vValue = oParentObj[sName];\n      if (isFinite(sName) || vValue instanceof Function) { continue; } /* verbosity level is 0 */\n      // when it is _\n      if (sName === cfg.sValueProp) {\n        if (vValue !== null && vValue !== true) { oParentEl.appendChild(oXMLDoc.createTextNode(vValue.constructor === Date ? vValue.toGMTString() : String(vValue))); }\n      } else if (sName === cfg.sAttrProp) { /* verbosity level is 3 */\n        for (let sAttrib in vValue) { \n          if(vValue.hasOwnProperty(sAttrib)) {\n            oParentEl.setAttribute(sAttrib, vValue[sAttrib]);\n          }\n        }\n      } else if (sName.charAt(0) === cfg.sAttrsPref && sName !== cfg.sAttrsPref+'xmlns') {\n        oParentEl.setAttribute(sName.slice(1), vValue);\n      } else if (vValue.constructor === Array) {\n        for (let nItem = 0; nItem < vValue.length; nItem = nItem + 1) {\n          oChild = oXMLDoc.createElementNS(vValue[nItem][cfg.sAttrsPref+'xmlns'] || oParentEl.namespaceURI, sName);\n          loadObjTree(oXMLDoc, oChild, vValue[nItem]);\n          oParentEl.appendChild(oChild);\n        }\n      } else {\n        oChild = oXMLDoc.createElementNS((vValue || {})[cfg.sAttrsPref+'xmlns'] || oParentEl.namespaceURI, sName);\n        if (vValue instanceof Object) {\n          loadObjTree(oXMLDoc, oChild, vValue);\n        } else if (vValue !== null && vValue !== true) {\n          oChild.appendChild(oXMLDoc.createTextNode(vValue.toString()));\n        } else if (!cfg.sEmptyTrue && vValue === true) {\n          oChild.appendChild(oXMLDoc.createTextNode(vValue.toString()));\n\n        }\n        oParentEl.appendChild(oChild);\n      }\n    }\n  }\n};\n/**\n* @class JXONService\n*/\nclass JXONService {\n  /**\n  * @constructs\n  */\n  constructor() {}\n  /**\n  * @function xmlToString\n  * @param {Object} xmlObj\n  * @return {String}\n  */\n  xmlToString(xmlObj) {\n    if (typeof xmlObj.xml !== \"undefined\") {\n      return xmlObj.xml;\n    } else {\n      return new window.XMLSerializer().serializeToString(xmlObj);\n    }\n  }\n  /**\n  * @alias xmlToJs\n  */\n  build(oXMLParent, nVerbosity, bFreeze, bNesteAttributes) {\n    return this.xmlToJs(oXMLParent, nVerbosity, bFreeze, bNesteAttributes);\n  }\n  /**\n  * @function jsToXml\n  * @param {Object} oObjTree\n  * @param {String} sNamespaceURI\n  * @param {String} sQualifiedName\n  * @param {Object} oDocumentType\n  * @return {Object}\n  */\n  jsToXml(oObjTree, sNamespaceURI, sQualifiedName, oDocumentType) {\n    let oNewDoc = window.document.implementation.createDocument(sNamespaceURI || null, sQualifiedName || \"\", oDocumentType || null);\n    loadObjTree(oNewDoc, oNewDoc.documentElement || oNewDoc, oObjTree);\n    return oNewDoc;\n  }\n  /**\n  * @alias jsToXml\n  */\n  unbuild(oObjTree, sNamespaceURI, sQualifiedName, oDocumentType) {\n    return this.jsToXml(oObjTree, sNamespaceURI, sQualifiedName, oDocumentType);\n  }\n  /**\n  * @function stringToXml\n  * @param {Object} xmlStr\n  * @return {String}\n  */    \n  stringToXml(xmlStr) {\n    return ( new window.DOMParser() ).parseFromString(xmlStr, 'application/xml');\n  }\n  /**\n  * @function jsToString\n  * @param {Object} oObjectTree\n  * @param {String} sNamespaceURI\n  * @param {String} sQualifiedName\n  * @param {Object} oDocumentType\n  * @return {String}\n  */\n  jsToString(oObjTree, sNamespaceURI, sQualifiedName, oDocumentType) {\n    return this.xmlToString(\n      this.jsToXml(oObjTree, sNamespaceURI, sQualifiedName, oDocumentType)\n    );\n  }\n  /**\n  * @alias jsToString\n  */\n  stringify(oObjTree, sNamespaceURI /* optional */, sQualifiedName /* optional */, oDocumentType /* optional */) {\n    return this.jsToString(oObjTree, sNamespaceURI, sQualifiedName, oDocumentType);\n  }\n  /**\n  * @function stringToJs\n  * @param {String} str - An string representing an XML document\n  * @return {Object}\n  */\n  stringToJs(str) {\n    let xmlObj = this.stringToXml(str);\n    return this.xmlToJs(xmlObj);\n  }\n  /**\n  * @function xmlToJs\n  * @param {Object} oXMLParent\n  * @param {Number} nVerbosity\n  * @param {Boolean} bFreeze\n  * @param {Boolean} bNesteAttributes\n  * @return {Object}\n  */\n  xmlToJs(oXMLParent, nVerbosity, bFreeze, bNesteAttributes) {\n    let _nVerb = arguments.length > 1 && typeof nVerbosity === \"number\" ? nVerbosity & 3 : /* put here the default verbosity level: */ 1;\n    return createObjTree(oXMLParent, _nVerb, bFreeze || false, arguments.length > 3 ? bNesteAttributes : _nVerb === 3);\n  }\n}\n/**\n* @ngdoc module\n* @name angular-jxon\n*/\nlet Module = require('angular').module('angular-jxon', ['ng']);\n/**\n* @ngdoc provider\n* @name $JXONProvider\n* @description Provider for the $JXON factory\n*/\nModule.provider('$JXON', function JXONProvider() {\n  /**\n  * @ngdoc method\n  * @name $JXONProvider#config\n  * @param {Object} cfgObject the configuration object to into the defaults\n  * @throws {InvalidArgumentException}\n  */\n  this.config = function(cfgObject) {\n    if(typeof(cfgObject) === 'object') {\n      for(let key in cfgObject){\n        if(cfgObject.hasOwnProperty(key)) {\n          switch(key) {\n            case 'valueKey':\n              cfg.sValueProp = cfgObject.valueKey;\n              break;\n            case 'attrKey':\n              cfg.sAttrProp = cfgObject.attrKey;\n              break;\n            case 'attrPrefix':\n              cfg.sAttrsPref = cfgObject.attrPrefix;\n              break;\n            case 'lowerCaseTags':\n              cfg.sLowCase = cfgObject.lowerCaseTags;\n              break;\n            case 'trueIsEmpty':\n              cfg.sEmptyTrue = cfgObject.trueIsEmpty;\n              break;\n            case 'autoDate':\n              cfg.sAutoDate = cfgObject.autoDate;\n              break;\n            case 'ignorePrefixedNodes':\n              cfg.sIgnorePrefixed = cfgObject.ignorePrefixedNodes;\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    } else {\n      throw new TypeError('config must be an object');\n    }\n  };  \n  /**\n  * @function $get\n  * @return {Object} JXONService\n  */\n  this.$get = function JXONFactory() {\n    return new JXONService();\n  };\n});\nmodule.exports = Module.name;"],"sourceRoot":""}